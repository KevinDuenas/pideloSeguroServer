# Custom Scalars
scalar Date

# Directives
directive @paginate on FIELD_DEFINITION

type Query {
  # User
  userByToken: User!
  userDocumentsStatus: [UserDocumentStatus]

  # Confg - Documents
  driverDocuments: [DocumentConfig]

  # Trip
  driverTrips(params: QueryParams): Trips! @paginate
  trip(tripId: ID!): Trip

  # AWS
  signFileUrl(filePath: String!, fileType: String!): SignedFileUrl!

  # Reports
  investorsReport: InvestorsReport!

  # Payments
  driverPayments: [Payment]!
  payments(params: QueryParams!): Payments!

  # Service
  services(state: StatesEnum!, params: QueryParams): Services! @paginate

  # Others
  serverDate: Date!
}

type Mutation {
  # User
  updateUserByToken(user: UserUpdateInput!): User!
  createAdminRole(user: AdminCreateInput!): User!
  uploadUserDocumentByToken(document: UserDocumentInput!): User!

  # Trip
  acceptTrip(tripId: ID): Trip
  denyTrip(tripId: ID!): Boolean!
  endTrip(tripId: ID!): Boolean!

  # Automobile
  addAutomobileByToken(automobile: AutomobileCreateInput!): Automobile!

  # Verification Request
  createDriverVerificationRequest: Boolean

  # Config - Documents
  createDocument(document: DocumentCreateInput!): Boolean!

  # Payments
  createStripePayment(amountInCents: Int!): Payment
  addStripePaymentMethod: String!
  removePaymentMethod: Boolean!
  createDepositPayment(deposit: DepositPaymentCreateInput!): Payment

  # Services
  createPassengersService(service: PassengersServiceCreateInput!): Service!
  createDeliveryService(service: DeliveryServiceCreateInput!): Service!
  createFoodDeliveryService(service: FoodDeliveryServiceCreateInput!): Service!

  # Others
  serverDate: Date!
}

type Subscription {
  # Trip
  newTrip: Trip
}
