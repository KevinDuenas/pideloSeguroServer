# Types
type User implements TimeStamps {
  id: ID!
  firstName: String!
  firstLastName: String!
  secondLastName: String!
  phoneNumber: String
  email: String!
  dob: Date
  profileImg: String
  documents: [UserDocument]!
  pushNotificationToken: String
  overallRole: OverallRole!

  # dynamic fields
  status: UserStatusEnum
  requestReady: Boolean
  activeTrip: Trip

  # Interface required
  createdAt: Date!
  updatedAt: Date!
}

type Users {
  info: Info!
  results: [User]!
}

type UserDocument {
  _id: ID
  name: String
  uri: String
  status: UserDocumentStatusEnum
  rejectedReason: String
  type: DocumentsTypes
}

type UserDocumentStatus {
  _id: ID
  name: String
  formatsAccepted: [DocumentsTypes]!
  uploadRequired: Boolean
  description: String
}

# Inputs

input UserUpdateInput {
  firstName: String
  phoneNumber: String
  firstLastName: String
  secondLastName: String
  email: String
  dob: Date
  profileImg: String
  documents: [UserDocumentInput]
  pushNotificationToken: String
}

input AdminCreateInput {
  firstName: String!
  firstLastName: String!
  secondLastName: String!
  email: String!
  overallRole: OverallRole!
  password: String!
}

input UserDocumentInput {
  _id: ID!
  name: String!
  uri: String!
  type: DocumentsTypes!
}

# Enums
enum UserSortableField {
  createdAt
}

enum UserDocumentStatusEnum {
  APPROVED
  REJECTED
  PENDING
}

enum UserStatusEnum {
  MISSING
  PENDING
  APPROVED
  BLOCKED
}

enum OverallRole {
  ADMIN
  USER
  SUPPORT
  INVESTOR
  STOCKHOLDER
  DRIVER
}
